"New strain exceeds 50%","Vaccination starts")
legend("topleft",legend=text,
text.width = strwidth(text)[1]/2,col=c("black","blue","forestgreen"),lty=c(4,4,4),lwd=c(1.5,1.5,1.5),cex=0.6,bg="white")
title("Cases by reported date and hospitalisations", line=-3 ,outer = TRUE)
#**************************************************************************************
list.files()
library(readxl)
data_google<-read_xlsx("google_activity_by_London_Borough.xlsx",sheet=1)
head(data_google)
data_google<-read_xlsx("google_activity_by_London_Borough.xlsx",sheet=2)
head(data_google)
names(data_google)
plot(data_google$`Retail and recreation`)
data_google$`Retail and recreation`
plot(-20:366,data_google$`Retail and recreation`)
plot(-20:367,data_google$`Retail and recreation`)
plot(-20:366,data_google$`Retail and recreation`)
plot(-20:366,data_google$`Retail and recreation`,type="l")
names(data_google)
plot(-20:366,data_google$`Grocery and pharmacy,`,type="l")
names(data_google)
plot(-20:366,data_google$`Grocery and pharmacy`,type="l")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l")
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="cyan")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="turqoise")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility\n index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
quartz()
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility\n index(%)",main="Google mobility index")
quartz()
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility\n index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility\n index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
quartz()
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
quartz(height = 4,width = 10)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
R_data<-read.csv("R-and-growth-rate-time-series-26-Feb-2021.csv",sep=";",header=TRUE)
beta<-function(t,alpha1=3/15,alpha2=5/15){ #t0 is the date of implementation
ifelse(t < t0, beta_r,
ifelse(t >= t0 & t < t1, beta_r*alpha1,
ifelse(t >= t1 & t < t2, beta_r*alpha2,
ifelse(t >= t2 & t < t3 , beta_r*alpha1,
ifelse(t >= t3 & t < t4 , beta_r*alpha2,
ifelse(t>=t4, beta_r*alpha1, beta_r))))))
}
plot(1:353,sapply(1:353,function(x) beta(x)/gamma),type="l",ylab="Rₒ(t)",xlab="Days from March 12",
main="Time dependent effective reproductive number",ylim=c(-.2,3.6))
abline(v = 78)
abline(v=281,col="green")
points(R_data$days,R_data$LL,type="o",lty=2,col="blue")
points(R_data$days,R_data$UP,type="o",lty=2,col="blue")
legend("topright",legend=c("R estimate interval","New strain exceeds 50%"),col=c("blue","green"),lty=c(2,1),cex=0.7)
beta_r <- 0.86# Constant transmission rate by day R_0=3.4444 (According to Liu) (R_0/avg.days)
rho <-0.33333 # 1/mean of incubation period
gamma<-0.25 # 1/mean of infectious period (4 days according to Britton)
beta<-function(t,alpha1=3/15,alpha2=5/15){ #t0 is the date of implementation
ifelse(t < t0, beta_r,
ifelse(t >= t0 & t < t1, beta_r*alpha1,
ifelse(t >= t1 & t < t2, beta_r*alpha2,
ifelse(t >= t2 & t < t3 , beta_r*alpha1,
ifelse(t >= t3 & t < t4 , beta_r*alpha2,
ifelse(t>=t4, beta_r*alpha1, beta_r))))))
}
plot(1:353,sapply(1:353,function(x) beta(x)/gamma),type="l",ylab="Rₒ(t)",xlab="Days from March 12",
main="Time dependent effective reproductive number",ylim=c(-.2,3.6))
abline(v = 78)
abline(v=281,col="green")
points(R_data$days,R_data$LL,type="o",lty=2,col="blue")
points(R_data$days,R_data$UP,type="o",lty=2,col="blue")
legend("topright",legend=c("R estimate interval","New strain exceeds 50%"),col=c("blue","green"),lty=c(2,1),cex=0.7)
quartz(height = 5,width=9)
plot(1:353,sapply(1:353,function(x) beta(x)/gamma),type="l",ylab="Rₒ(t)",xlab="Days from March 12",
main="Time dependent effective reproductive number",ylim=c(-.2,3.6))
abline(v = 78)
abline(v=281,col="green")
points(R_data$days,R_data$LL,type="o",lty=2,col="blue")
points(R_data$days,R_data$UP,type="o",lty=2,col="blue")
legend("topright",legend=c("R estimate interval","New strain exceeds 50%"),col=c("blue","green"),lty=c(2,1),cex=0.7)
quartz(height = 5,width=9)
plot(1:353,sapply(1:353,function(x) beta(x)/gamma),type="l",ylab="Rₒ(t)",xlab="Days from March 12",
main="Time dependent effective reproductive number",ylim=c(-.2,3.6))
abline(v = 78)
abline(v=281,col="green")
points(R_data$days,R_data$LL,type="o",lty=2,col="blue")
points(R_data$days,R_data$UP,type="o",lty=2,col="blue")
legend("topright",legend=c("R estimate interval","New strain exceeds 50%"),col=c("blue","green"),lty=c(2,1),cex=0.7)
beta<-function(t,alpha1=3.5/15,alpha2=5.5/15){ #t0 is the date of implementation
ifelse(t < t0, beta_r,
ifelse(t >= t0 & t < t1, beta_r*alpha1,
ifelse(t >= t1 & t < t2, beta_r*alpha2,
ifelse(t >= t2 & t < t3 , beta_r*alpha1,
ifelse(t >= t3 & t < t4 , beta_r*alpha2,
ifelse(t>=t4, beta_r*alpha1, beta_r))))))
}
quartz(height = 5,width=9)
plot(1:353,sapply(1:353,function(x) beta(x)/gamma),type="l",ylab="Rₒ(t)",xlab="Days from March 12",
main="Time dependent effective reproductive number",ylim=c(-.2,3.6))
abline(v = 78)
abline(v=281,col="green")
points(R_data$days,R_data$LL,type="o",lty=2,col="blue")
points(R_data$days,R_data$UP,type="o",lty=2,col="blue")
legend("topright",legend=c("R estimate interval","New strain exceeds 50%"),col=c("blue","green"),lty=c(2,1),cex=0.7)
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
legend(c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),lty=c(1,1))
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
legend(c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),lty=c(1,1))
legend(legend=c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),lty=c(1,1))
legend("topleft",legend=c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),lty=c(1,1))
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
legend("topright",legend=c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),lty=c(1,1))
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
abline(v=t0,lty=4,lwd=1.5)
abline(v=t1,lty=4,lwd=1.5)
abline(v=t2,lty=4,lwd=1.5)
abline(v=t3,lty=4,lwd=1.5)
abline(v=t4,lty=4,lwd=1.5)
abline(v=271,lty=4,col="forestgreen",lwd=1.5)
abline(v=281,lty=4,col="blue",lwd=1.5)
legend("topright",legend=c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),lty=c(1,1))
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
abline(v=t0,lty=4,lwd=1.5)
abline(v=t1,lty=4,lwd=1.5)
abline(v=t2,lty=4,lwd=1.5)
abline(v=t3,lty=4,lwd=1.5)
abline(v=t4,lty=4,lwd=1.5)
abline(v=271,lty=4,col="forestgreen",lwd=1.5)
abline(v=281,lty=4,col="blue",lwd=1.5)
legend("topright",legend=c("Retail and recreation","Grocery and pharmacy"),col=c("purple","darkturquoise"),
lty=c(1,1),bg="white")
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
abline(v=t0,lty=4,lwd=1.5)
abline(v=t1,lty=4,lwd=1.5)
abline(v=t2,lty=4,lwd=1.5)
abline(v=t3,lty=4,lwd=1.5)
abline(v=t4,lty=4,lwd=1.5)
legend("topright",legend=c("Retail and recreation","Grocery and pharmacy","Change in lockdown policy"),col=c("purple","darkturquoise"),
lty=c(1,1),bg="white")
quartz(height = 5,width = 9)
plot(-20:366,data_google$`Retail and recreation`,type="l",col="purple",
xlab="Days from March 12",ylab="Change in mobility index(%)",main="Google mobility index")
lines(-20:366,data_google$`Grocery and pharmacy`,type="l",col="darkturquoise")
abline(v=t0,lty=4,lwd=1.5)
abline(v=t1,lty=4,lwd=1.5)
abline(v=t2,lty=4,lwd=1.5)
abline(v=t3,lty=4,lwd=1.5)
abline(v=t4,lty=4,lwd=1.5)
legend("topright",legend=c("Retail and recreation","Grocery and pharmacy","Change in lockdown policy"),col=c("purple","darkturquoise","black"),
lty=c(1,1,2),bg="white")
t1 <- 103 # 4 july, NO LOCKDOWN
t2 <- 238 # 6 nov, LOCKDOWN AGAIN
t3 <- 266 # 3 dec, NO LOCKDOWN AGAIN
t4 <- 298 # 4 ene, LOCKDOWN AGAIN
alpha1_<-mean(R_data[R_data$days<t1|(R_data$days>t2&R_data$days<=t3),]$England)
alpha2_<-mean(R_data[R_data$days>t1&R_data$days<=t2,]$England)
beta_r <- 0.86# Constant transmission rate by day R_0=3.4444 (According to Liu) (R_0/avg.days)
rho <-0.33333 # 1/mean of incubation period
gamma<-0.25 # 1/mean of infectious period (4 days according to Britton)
alpha1<-(gamma*alpha1_)/beta_r
alpha2<-(gamma*alpha2_)/beta_r
c(alpha1,alpha2)
# SEIR stochastic model (almost an "Standard SEIR model" see Britton p.11)
rm(list=ls())
setwd("~/Desktop/SAMBa/Semester 1/IRP/Data")
data<-read.csv("Data IRP Covid19 Strand 2 - Hoja 3.csv",header=T,stringsAsFactors = F)
data$Admissions<-as.numeric(data$Admissions)
N=56000000 # Population size
m<- 486 # Number of initial infectives (t0 = 12 march)
beta_r <- 0.86# Constant transmission rate by day R_0=3.4444 (According to Liu) (R_0/avg.days)
rho <-0.33333 # 1/mean of incubation period
gamma<-0.25 # 1/mean of infectious period (4 days according to Britton)
theta<-5 # Maximium likelihood estimator
p_H <- 0.06423 #  MLE Estimated by me
t0<-11 #  days to implement first lockdown
t1 <- 103 # 4 july, NO LOCKDOWN
t2 <- 238 # 6 nov, LOCKDOWN AGAIN
t3 <- 266 # 3 dec, NO LOCKDOWN AGAIN
t4 <- 298 # 4 ene, LOCKDOWN AGAIN
# We're assuming the estimated rates are in days units
# Values of impact of lockdown and postlockdown (Obtained by least squares)
alpha1 <-0.2797965116
alpha2 <-0.3136474908
#alpha1 <- 3/15 #these work well # should I use brute
#alpha2 <- 5/15 # force to find this estimations given Hospitalisations?
# beta_r<-2.0 #this solves the first wave problem but has no sense for R
# alpha1<-1.1/15
# alpha2<-2.2/15
beta<-function(t){ #t0 is the date of implementation
ifelse(t < t0, beta_r,
ifelse(t >= t0 & t < t1, beta_r*alpha1,
ifelse(t >= t1 & t < t2, beta_r*alpha2,
ifelse(t >= t2 & t < t3 , beta_r*alpha1,
ifelse(t >= t3 & t < t4 , beta_r*alpha2,
ifelse(t>=t4, beta_r*alpha1, beta_r))))))
}
# Jumping probabilities
P_ <- function(t,I){
1-exp(-beta(t)*I/N)
}
pc <- 1-exp(-rho)
pr <- 1-exp(-gamma)
# Series of compartments and jumps
S<-c()
B<-c();E<-c() # B is the jump; E the no. of exposed
C<-c();I<-c()
D<-c();R<-c()
H<-c() # Hospitalized
# Initialization of compartments
S[1]<-N-m
E[1]<-0
I[1]<-m
R[1]<-0
H[1:theta]<-0
# Simulation
for(i in 1:1000){
B[i]<-rbinom(1,S[i],P_(i,I[i]))
C[i]<-rbinom(1,E[i],pc)
D[i]<-rbinom(1,I[i],pr)
H[i+theta]<-rbinom(1,I[i],p=p_H)
#******************************
S[i+1]<-S[i]-B[i]
E[i+1]<-E[i]+B[i]-C[i]
I[i+1]<-I[i]+C[i]-D[i]
R[i+1]<-N-S[i+1]-E[i+1]-I[i+1]
}
#PEAK[J]<-which(I==max(I)) # to know the peak distribution
# ************** P L O T S ***************
# Infected people ----------------
quartz(width = 11,height=4.4)
par(mfrow=c(1,2))
plot(log(I,10),type="l",col="red",lwd=2,xlim=c(0,500),main="Log of Infected people",ylab="log-10 of Infected",xlab="")
abline(v=11,lty=2)
abline(v=103,lty=2)
abline(v=238,lty=2)
abline(v=266,lty=2)
abline(h=0)
# Hospitalisations ----------------
plot(H,type="l",main="Hospitalisations",ylab="Hospitalised people",xlab="Days from March 12",xlim=c(0,500),ylim=c(0,5000),col="forestgreen",lwd=2)
abline(v=11,lty=2)
abline(v=103,lty=2)
abline(v=238,lty=2)
abline(v=266,lty=2)
abline(h=0)
points(data$days.from.12.March,data$Admissions,type="l",col="red")
legend("topright",lty=c(1,1),lwd=c(2,2),col=c("forestgreen","red"),
legend=c("Simulated","Observed"),cex = 0.8,bg = "white")
print<-sum(I[1:339])
# ***********S I R series in one plot ---------
I=I/N
S=S/N
R=R/N
par(mfrow=c(1,1))
plot(I,type="l",xlim=c(0,500),ylim=c(0,1),col="red",ylab="People",lwd=2,xlab="",
main="COVID-19 Stochastic SEIR model")
lines(S,col="blue",lwd=2)
lines(R,col="purple",lwd=2)
abline(v=11,lty=2)
abline(v=103,lty=2)
abline(v=238,lty=2)
abline(v=266,lty=2)
abline(h=0)
legend("right",lty=c(1,1,1),lwd=c(2,2,2),col=c("red","blue","purple","n"),
legend=c("Infected","Susceptible","Recovered"),cex = 0.8,bg = "white")
print(print)
#************** Assessment of simulation *********************
# SEIR stochastic model (almost an "Standard SEIR model" see Britton p.11)
rm(list=ls())
setwd("~/Desktop/SAMBa/Semester 1/IRP/Data")
data<-read.csv("Data IRP Covid19 Strand 2 - Hoja 3.csv",header=T,stringsAsFactors = F)
data$Admissions<-as.numeric(data$Admissions)
N=56000000 # Population size
m<- 486 # Number of initial infectives (t0 = 12 march)
beta_r <- 0.86# Constant transmission rate by day R_0=3.4444 (According to Liu) (R_0/avg.days)
rho <-0.33333 # 1/mean of incubation period
gamma<-0.25 # 1/mean of infectious period (4 days according to Britton)
theta<-5 # Maximium likelihood estimator
p_H <- 0.06423 #  MLE Estimated by me
t0<-11 #  days to implement first lockdown
t1 <- 103 # 4 july, NO LOCKDOWN
t2 <- 238 # 6 nov, LOCKDOWN AGAIN
t3 <- 266 # 3 dec, NO LOCKDOWN AGAIN
t4 <- 298 # 4 ene, LOCKDOWN AGAIN
# We're assuming the estimated rates are in days units
# Values of impact of lockdown and postlockdown (Obtained by least squares)
alpha1 <-0.2797965116
alpha2 <-0.3136474908
#alpha1 <- 3/15 #these work well # should I use brute
#alpha2 <- 5/15 # force to find this estimations given Hospitalisations?
# beta_r<-2.0 #this solves the first wave problem but has no sense for R
# alpha1<-1.1/15
# alpha2<-2.2/15
beta<-function(t){ #t0 is the date of implementation
ifelse(t < t0, beta_r,
ifelse(t >= t0 & t < t1, beta_r*alpha1,
ifelse(t >= t1 & t < t2, beta_r*alpha2,
ifelse(t >= t2 & t < t3 , beta_r*alpha1,
ifelse(t >= t3 & t < t4 , beta_r*alpha2,
ifelse(t>=t4, beta_r*alpha1, beta_r))))))
}
# Jumping probabilities
P_ <- function(t,I){
1-exp(-beta(t)*I/N)
}
pc <- 1-exp(-rho)
pr <- 1-exp(-gamma)
# Series of compartments and jumps
S<-c()
B<-c();E<-c() # B is the jump; E the no. of exposed
C<-c();I<-c()
D<-c();R<-c()
H<-c() # Hospitalized
# Initialization of compartments
S[1]<-N-m
E[1]<-0
I[1]<-m
R[1]<-0
H[1:theta]<-0
# Simulation
for(i in 1:1000){
B[i]<-rbinom(1,S[i],P_(i,I[i]))
C[i]<-rbinom(1,E[i],pc)
D[i]<-rbinom(1,I[i],pr)
H[i+theta]<-rbinom(1,I[i],p=p_H)
#******************************
S[i+1]<-S[i]-B[i]
E[i+1]<-E[i]+B[i]-C[i]
I[i+1]<-I[i]+C[i]-D[i]
R[i+1]<-N-S[i+1]-E[i+1]-I[i+1]
}
#PEAK[J]<-which(I==max(I)) # to know the peak distribution
# ************** P L O T S ***************
# Infected people ----------------
quartz(width = 11,height=4.4)
par(mfrow=c(1,2))
plot(log(I,10),type="l",col="red",lwd=2,xlim=c(0,500),main="Log of Infected people",ylab="log-10 of Infected",xlab="")
abline(v=11,lty=2)
abline(v=103,lty=2)
abline(v=238,lty=2)
abline(v=266,lty=2)
abline(h=0)
# Hospitalisations ----------------
plot(H,type="l",main="Hospitalisations",ylab="Hospitalised people",xlab="Days from March 12",xlim=c(0,500),ylim=c(0,5000),col="forestgreen",lwd=2)
abline(v=11,lty=2)
abline(v=103,lty=2)
abline(v=238,lty=2)
abline(v=266,lty=2)
abline(h=0)
points(data$days.from.12.March,data$Admissions,type="l",col="red")
legend("topright",lty=c(1,1),lwd=c(2,2),col=c("forestgreen","red"),
legend=c("Simulated","Observed"),cex = 0.8,bg = "white")
print<-sum(I[1:339])
# ***********S I R series in one plot ---------
I=I/N
S=S/N
R=R/N
quartz()
par(mfrow=c(1,1))
plot(I,type="l",xlim=c(0,500),ylim=c(0,1),col="red",ylab="People",lwd=2,xlab="",
main="COVID-19 Stochastic SEIR model")
lines(S,col="blue",lwd=2)
lines(R,col="purple",lwd=2)
abline(v=11,lty=2)
abline(v=103,lty=2)
abline(v=238,lty=2)
abline(v=266,lty=2)
abline(h=0)
legend("right",lty=c(1,1,1),lwd=c(2,2,2),col=c("red","blue","purple","n"),
legend=c("Infected","Susceptible","Recovered"),cex = 0.8,bg = "white")
print(print)
#************** Assessment of simulation *********************
array(rnorm(500),c(100,5))
x<-array(rnorm(500),c(100,5))
x[101:200]
dim(x)
x[,2]
x[101:200]==x[,2]
.5676^2+0.09302^2+.766648^2
.567616^2+0.0930295^2+.76664837^2
0.15369913^2+.8920063^2+.32346324^2
sample3d <- function(xyz)
{
Length = sqrt(xyz[1]^2+xyz[2]^2+xyz[3]^2)
if (Length > 1) {
sample3d(runif(3,min=-1,max=1))
} else {
point = xyz/Length
return(point)
}
}
sample3d(100)
sample3d(runif(100,-1,1))
sqrt(sample3d(runif(100,-1,1))^2)
sqrt(sample3d(runif(3,-1,1))^2)
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sqrt(sum(sample3d(runif(3,-1,1))^2))
sample3d = function(n)
{
vecx = runif(n,-1,1)
vecy = runif(n,-1,1)
vecz = runif(n,-1,1)
vectx = vecx/sqrt(vecx^2+vecy^2+vecz^2)
vecty = vecy/sqrt(vecx^2+vecy^2+vecz^2)
vectz = vecz/sqrt(vecx^2+vecy^2+vecz^2)
row.names = c("X","Y","Z")
column.names = c(1:n)
matrix.names = c("coordinates")
arr = array(c(vectx,vecty,vectz),dim = c(3,n,1),dimnames=list (row.names,column.names,matrix.names))
arr
}
blocs = sample3d(500)
dlocs = sample3d(500)
c = blocs-dlocs
eudist = sqrt(colSums(c^2))
hist(eudist,prob=TRUE,xlab="Euclidean distance between two points",main="Histogram of euclidean distances between Boris and Dominic")
curve(dnorm(x,1.4,0.5),col="red",add=TRUE)
blocs
dim(blocs)
head(blocs)
blocs
sample3d = function(n)
{
vecx = runif(n,-1,1)
vecy = runif(n,-1,1)
vecz = runif(n,-1,1)
vectx = vecx/sqrt(vecx^2+vecy^2+vecz^2)
vecty = vecy/sqrt(vecx^2+vecy^2+vecz^2)
vectz = vecz/sqrt(vecx^2+vecy^2+vecz^2)
row.names = c("X","Y","Z")
column.names = c(1:n)
matrix.names = c("coordinates")
arr = array(c(vectx,vecty,vectz),dim = c(3,n,1),dimnames=list (row.names,column.names,matrix.names))
arr
}
sample3d(1)
a<-sample3d(1)
b<-sample3d(1)
a
b
a-b
sum(a)
sum(a^2)
sum(b^2)
sum((a-b)^2)
sqrt(sum((a-b)^2))
blocs = sample3d(500)
dlocs = sample3d(500)
c = blocs-dlocs
eudist = sqrt(colSums(c^2))
hist(eudist,prob=TRUE,xlab="Euclidean distance between two points",main="Histogram of euclidean distances between Boris and Dominic")
525339-11068
.65/.327
16819+10994+72
10994/27885
10994/(16819+72)
library(plotly)
library(readxl)
setwd("~/Desktop/SAMBa/Semester 1/IRP/Data")
data<-read.csv("Data IRP Covid19 Strand 2 - Hoja 3.csv",header=T,stringsAsFactors = F)
three_months_days<-data[data$YEAR=="2020"&data$MONTH%in%c(8,9,10),]$days.from.12.March
data$Admissions<-as.numeric(data$Admissions)
View(data)
486-241
